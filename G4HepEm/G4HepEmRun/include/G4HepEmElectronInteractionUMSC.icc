#include "G4HepEmElectronInteractionUMSC.hh"

// totry: all these could probably be computed in `float`
double G4HepEmElectronInteractionUMSC::Theta0PositronCorrection(double eekin, double zeff) {
  const double ff = 1. + zeff*(1.84035E-4*zeff - 1.86427E-2) + 0.41125;
  const double  a = 0.994 - 4.08E-3*zeff;
  const double  b = 7.16 + (52.6 + 365./zeff)/zeff;
  const double tu = std::sqrt(eekin)*kInvElectronMassC2;
  const double  x = std::sqrt(tu*(tu + 2.)/((tu + 1.)*(tu + 1.)));
  //
  const double xl = 0.6;
  if (x < xl) {
    return ff*a*(1. - G4HepEmExp(-b*x));
  }
  //
  const double  c = 1.00 - 4.47E-3*zeff;
  const double  d = 1.21E-3*zeff;
  const double  e = 113.0;
  const double xh = 0.9;
  if(x > xh) {
    return ff*(c + d*G4HepEmExp(e*(x - 1.)));
  }
  //
  const double yl = a*(1. - G4HepEmExp(-b*xl));
  const double yh = c + d*G4HepEmExp(e*(xh -1.));
  const double y0 = (yh - yl)/(xh - xl);
  const double y1 = yl - y0*xl;
  return ff*(y0*x + y1);
}



