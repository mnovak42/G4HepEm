
#include "G4HepEmElectronInteractionIoni.hh"

#include "G4HepEmTLData.hh"
#include "G4HepEmData.hh"
#include "G4HepEmMatCutData.hh"

#include "G4HepEmElectronTrack.hh"
#include "G4HepEmMath.hh"

#include <iostream>

void G4HepEmElectronInteractionIoni::Perform(G4HepEmTLData* tlData, struct G4HepEmData* hepEmData, bool iselectron) {
  G4HepEmElectronTrack* thePrimaryElTrack = tlData->GetPrimaryElectronTrack();
  G4HepEmTrack* thePrimaryTrack = thePrimaryElTrack->GetTrack();
  double    thePrimEkin = thePrimaryTrack->GetEKin();
  const int   theMCIndx = thePrimaryTrack->GetMCIndex();
  const double theElCut = hepEmData->fTheMatCutData->fMatCutData[theMCIndx].fSecElProdCutE;

  const double maxETransfer = (iselectron) ? 0.5*thePrimEkin : thePrimEkin;
  if (maxETransfer <= theElCut) return;

  //
  // sample energy transfer and compute direction
  const double  deltaEkin = (iselectron)
                            ? SampleETransferMoller(theElCut, thePrimEkin, tlData->GetRNGEngine())
                            : SampleETransferBhabha(theElCut, thePrimEkin, tlData->GetRNGEngine());
  // get a secondary e- track and sample/compute directions (all will be already in lab. frame)
  G4HepEmTrack* theSecTrack = tlData->AddSecondaryElectronTrack()->GetTrack();
  double*     theSecElecDir = theSecTrack->GetDirection();
  double*    thePrimElecDir = thePrimaryTrack->GetDirection();
  //
  // == Sample/copute the emitted secondary e- and post interaction primary e-/e+ directions
  SampleDirections(thePrimEkin, deltaEkin, theSecElecDir, thePrimElecDir, tlData->GetRNGEngine());
  //
  // == Update primary e-/e+ and the secondary e- track properties
  //    note: the directions are already set in SampleDirections
  thePrimaryTrack->SetEKin(thePrimEkin - deltaEkin);
  theSecTrack->SetEKin(deltaEkin);
  theSecTrack->SetParentID(thePrimaryTrack->GetID());
}